on_actions = {
	on_startup = {
		effect = {
			every_state = {
				set_variable = { state_loyalty_variable = 100 }
			}
			every_country = {
				set_country_flag = {
					flag = revolt_blocker
					days = 60
				}
			}
		}
	}

	on_monthly = {
		effect = {

			##### revolt risk authority base

			set_variable = { peasant_revolt_risk_variable = current_authority }

			### literacy factor

			set_variable = { literacy_revolt_factor = literacy_variable }
			multiply_variable = { literacy_revolt_factor = 0.01 }

			multiply_variable = { peasant_revolt_risk_variable = literacy_revolt_factor }

			### stability factor

			set_variable = { stability_revolt_factor = 1 }
			subtract_from_variable = { stability_revolt_factor = var:stability@ROOT }
			clamp_variable = {
				var = stability_revolt_factor
				min = 0
			}
			multiply_variable = { stability_revolt_factor = stability_revolt_factor }

			multiply_variable = { peasant_revolt_risk_variable = stability_revolt_factor }

			### modifier factor

			set_variable = { revolt_factor_modifier = 1 }
			add_to_variable = { revolt_factor_modifier = modifier@revolt_risk }
			clamp_variable = {
				var = revolt_factor_modifier
				min = 0
			}

			multiply_variable = { peasant_revolt_risk_variable = revolt_factor_modifier }

			clamp_variable = {
				var = peasant_revolt_risk_variable
				min = 0
				max = 100
			}


			if = {
				limit = {
					NOT = {
						has_country_flag = active_peasant_revolt
						has_country_flag = revolt_blocker
						has_country_leader_with_trait = extinguished_population
					}
				}
				random = {
					chance = peasant_revolt_risk_variable

					country_event = { 
						id = generic_peasant.1
						days = 0  
						random_days = 31 
					}
					set_country_flag = active_peasant_revolt
				}
			}


			if = {
				limit = {
					has_country_flag = active_peasant_revolt
				}

				every_core_state = {
					limit = {
						is_controlled_by = ROOT
					}

					subtract_from_variable = { 
						THIS.state_loyalty_variable = THIS.modifier@revolt_growth
					}

				}
			}
			
		}
	}


	
}